source ~/.vimrc-plugins

syntax on

" Color theme
let base16colorspace=256
colorscheme base16-ocean
set background=dark

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

" Word wrapping
set wrap
set linebreak
set nolist  " list disables linebreak
set textwidth=0
set wrapmargin=0
set formatoptions-=t
set formatoptions+=l

" Spaces & Tabs
set tabstop=2       " number of visual spaces per TAB
set softtabstop=2   " number of spaces in tab when editing
set expandtab       " tabs are spaces
set shiftwidth=2

" UI config
set number              " show line numbers
set relativenumber " the selected line has a line numbers but the other ones have a relative number to this one
filetype indent on      " load filetype-specific indent files
set autoread            " reload files when changed on disk, i.e. via `git checkout`
set cursorline " highlight the current line
set colorcolumn=120 " show line at 120 colors

" Better search
set ignorecase
set smartcase
set hlsearch
set showmatch
set incsearch

" keyboard shortcuts
let mapleader = ','
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>d :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
nnoremap <leader>a :Ag<space>
noremap <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

nnoremap <leader><space> :nohl<CR>

" shortcuts for clipboard copy/paste
vmap <Leader>y "*y
nmap <Leader>y "*y
nmap <Leader>p "*p
nmap <Leader>P "*P
vmap <Leader>p "*p
vmap <Leader>P "*P

" shortcut for saving file
nnoremap <Leader>w :w<CR>

" shortcut for deleting all buffers except the current one
nnoremap <Leader>bo :BufOnly<CR>

" delete file and buffer
nnoremap <Leader>rm :call delete(expand('%')) \| bdelete! \| :CtrlPClearCache<CR>

" fix whitespace
nnoremap <Leader>fw :FixWhitespace<CR>

" RSpec.vim mappings
map <Leader>c :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>e :call RunAllSpecs()<CR>

" easier split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Buffer navigation
nnoremap <Leader>bu :buffers<CR>:buffer<Space>

" Vim fugitive mappings
nnoremap gs :Gstatus<CR>

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" plugin settings
let g:ctrlp_match_window = 'order:ttb,max:20'
let g:NERDSpaceDelims=1
set wildignore+=log/**,node_modules/**,target/**,tmp/**,*.rbc,*.log
let g:gitgutter_sign_column_always = 1 " always show sign column for vim

" Syntastic settings

" Mark syntax errors with :signs
let g:syntastic_enable_signs=1

" Do not automatically jump to the error when saving the file
" Jump feature is annoying to me as it automatically moves the cursor
let g:syntastic_auto_jump=0

" Show the error list automatically
" Allows you to easily navigate the quick fix list
let g:syntastic_auto_loc_list=1

" This is where the magic happens. Chain together different style checkers
" in order to check for both style flaws and syntax errors.
" Syntax checkers: https://github.com/scrooloose/syntastic/wiki/Syntax-Checkers
let g:syntastic_ruby_checkers=['mri']
let g:syntastic_scss_checkers=['']
let g:syntastic_hbs_checkers=['']

" Full background themes
set t_ut=

" Set up vim.rspec with Dispatch
let g:rspec_command = "Dispatch bin/rspec {spec}"

" Change bockle default mapping
let g:blockle_mapping = '<Leader>bl'

" Make bufferline only print to the Airline command bar
let g:bufferline_echo = 0
